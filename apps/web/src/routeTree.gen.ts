/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as ExampleChatImport } from './routes/example/chat'
import { Route as DemoTanstackQueryImport } from './routes/demo/tanstack-query'
import { Route as DemoStoreImport } from './routes/demo/store'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthSigninImport } from './routes/_auth/signin'
import { Route as ExampleGuitarsIndexImport } from './routes/example/guitars.index'
import { Route as ExampleGuitarsGuitarIdImport } from './routes/example/guitars.$guitarId'
import { Route as DemoStartServerFuncsImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestImport } from './routes/demo/start.api-request'
import { Route as DemoFormSimpleImport } from './routes/demo/form.simple'
import { Route as DemoFormAddressImport } from './routes/demo/form.address'
import { Route as DemoEntryTestingImport } from './routes/demo/entry.testing'

// Create/Update Routes

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExampleChatRoute = ExampleChatImport.update({
  id: '/example/chat',
  path: '/example/chat',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const DemoStoreRoute = DemoStoreImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRouteRoute,
} as any)

const ExampleGuitarsIndexRoute = ExampleGuitarsIndexImport.update({
  id: '/example/guitars/',
  path: '/example/guitars/',
  getParentRoute: () => rootRoute,
} as any)

const ExampleGuitarsGuitarIdRoute = ExampleGuitarsGuitarIdImport.update({
  id: '/example/guitars/$guitarId',
  path: '/example/guitars/$guitarId',
  getParentRoute: () => rootRoute,
} as any)

const DemoStartServerFuncsRoute = DemoStartServerFuncsImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRoute,
} as any)

const DemoStartApiRequestRoute = DemoStartApiRequestImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRoute,
} as any)

const DemoFormSimpleRoute = DemoFormSimpleImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRoute,
} as any)

const DemoFormAddressRoute = DemoFormAddressImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRoute,
} as any)

const DemoEntryTestingRoute = DemoEntryTestingImport.update({
  id: '/demo/entry/testing',
  path: '/demo/entry/testing',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthRouteImport
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/example/chat': {
      id: '/example/chat'
      path: '/example/chat'
      fullPath: '/example/chat'
      preLoaderRoute: typeof ExampleChatImport
      parentRoute: typeof rootRoute
    }
    '/demo/entry/testing': {
      id: '/demo/entry/testing'
      path: '/demo/entry/testing'
      fullPath: '/demo/entry/testing'
      preLoaderRoute: typeof DemoEntryTestingImport
      parentRoute: typeof rootRoute
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressImport
      parentRoute: typeof rootRoute
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleImport
      parentRoute: typeof rootRoute
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestImport
      parentRoute: typeof rootRoute
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsImport
      parentRoute: typeof rootRoute
    }
    '/example/guitars/$guitarId': {
      id: '/example/guitars/$guitarId'
      path: '/example/guitars/$guitarId'
      fullPath: '/example/guitars/$guitarId'
      preLoaderRoute: typeof ExampleGuitarsGuitarIdImport
      parentRoute: typeof rootRoute
    }
    '/example/guitars/': {
      id: '/example/guitars/'
      path: '/example/guitars'
      fullPath: '/example/guitars'
      preLoaderRoute: typeof ExampleGuitarsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/example/chat': typeof ExampleChatRoute
  '/demo/entry/testing': typeof DemoEntryTestingRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/example/guitars/$guitarId': typeof ExampleGuitarsGuitarIdRoute
  '/example/guitars': typeof ExampleGuitarsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/example/chat': typeof ExampleChatRoute
  '/demo/entry/testing': typeof DemoEntryTestingRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/example/guitars/$guitarId': typeof ExampleGuitarsGuitarIdRoute
  '/example/guitars': typeof ExampleGuitarsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/example/chat': typeof ExampleChatRoute
  '/demo/entry/testing': typeof DemoEntryTestingRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/example/guitars/$guitarId': typeof ExampleGuitarsGuitarIdRoute
  '/example/guitars/': typeof ExampleGuitarsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/signin'
    | '/signup'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/example/chat'
    | '/demo/entry/testing'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/example/guitars/$guitarId'
    | '/example/guitars'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/signin'
    | '/signup'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/example/chat'
    | '/demo/entry/testing'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/example/guitars/$guitarId'
    | '/example/guitars'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/example/chat'
    | '/demo/entry/testing'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/example/guitars/$guitarId'
    | '/example/guitars/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DemoStoreRoute: typeof DemoStoreRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ExampleChatRoute: typeof ExampleChatRoute
  DemoEntryTestingRoute: typeof DemoEntryTestingRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
  ExampleGuitarsGuitarIdRoute: typeof ExampleGuitarsGuitarIdRoute
  ExampleGuitarsIndexRoute: typeof ExampleGuitarsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DemoStoreRoute: DemoStoreRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ExampleChatRoute: ExampleChatRoute,
  DemoEntryTestingRoute: DemoEntryTestingRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
  ExampleGuitarsGuitarIdRoute: ExampleGuitarsGuitarIdRoute,
  ExampleGuitarsIndexRoute: ExampleGuitarsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/demo/store",
        "/demo/tanstack-query",
        "/example/chat",
        "/demo/entry/testing",
        "/demo/form/address",
        "/demo/form/simple",
        "/demo/start/api-request",
        "/demo/start/server-funcs",
        "/example/guitars/$guitarId",
        "/example/guitars/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/signin",
        "/_auth/signup"
      ]
    },
    "/_auth/signin": {
      "filePath": "_auth/signin.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/demo/store": {
      "filePath": "demo/store.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo/tanstack-query.tsx"
    },
    "/example/chat": {
      "filePath": "example/chat.tsx"
    },
    "/demo/entry/testing": {
      "filePath": "demo/entry.testing.tsx"
    },
    "/demo/form/address": {
      "filePath": "demo/form.address.tsx"
    },
    "/demo/form/simple": {
      "filePath": "demo/form.simple.tsx"
    },
    "/demo/start/api-request": {
      "filePath": "demo/start.api-request.tsx"
    },
    "/demo/start/server-funcs": {
      "filePath": "demo/start.server-funcs.tsx"
    },
    "/example/guitars/$guitarId": {
      "filePath": "example/guitars.$guitarId.tsx"
    },
    "/example/guitars/": {
      "filePath": "example/guitars.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
